#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=9999&campaignid=1"*"', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Get table of target charities
charity_data_s <- charities_csv_sample %>%
read_csv %>%
#drop_na(charity_name, regno)
drop_na(charity_name)
library(pacman)
#knitr,dplyr,tidyverse,labelled,citr,reporttools,magrittr,glue,huxtable,experiment,dataMaid,broom,janitor,here,xRStata,estimatr,xtable
p_load(dplyr,magrittr,purrr,tidyverse,tidyr,broom,janitor, here,glue,dataMaid,readr,lubridate,summarytools, httr,jsonlite,rlist,XML)
#Folder holding all the raw data and files that are created for the process
data_folder <- 'data'
#File that lists the target charities with their ids
charities_csv <- file.path(data_folder, 'effective_charities.csv') #replace with your list of preferred charities (this script currently only uses charity name and JustGiving ID)
charities_csv_sample <- file.path(data_folder, 'charity_sample.csv')
#A folder that contains all the fundraising and donation data, a new copy each time the code is run
snapshots_folder <- file.path(data_folder, 'just_giving_data_snapshots')
#In the get_current... file, We don't look at pages with first donation that comes before the
experiment_start_date <- as.Date('2018/04/13') #REMEMBER to reset this!!
date = Sys.Date()
time = Sys.time()
#File and folder paths are defined here; used to save the data at the end of this script
donations_file <- paste('donations', date, '.csv', sep = '')
donations_file_rds <- paste('donations', date, '.rds', sep = '')
fundraisers_file <- paste('fundraisers', date, '.csv', sep = '')
fundraisers_file_rds <- paste('fundraisers', date, '.rds', sep = '')
donations_folder <- file.path(snapshots_folder, 'donations')
fundraisers_folder <- file.path(snapshots_folder, 'fundraisers')
current_donations_file <- file.path(donations_folder, donations_file)
current_donations_file_rds <- file.path(donations_folder, donations_file_rds)
current_fundraisers_file <- file.path(fundraisers_folder, fundraisers_file)
current_fundraisers_file_rds <- file.path(fundraisers_folder, fundraisers_file_rds)
#'_s' for 'sample' ... versions including top-10 non-effective
donations_file_s <- paste('donations_s', date, '.csv', sep = '')
donations_file_s_rds <- paste('donations_s', date, '.rds', sep = '')
fundraisers_file_s <- paste('fundraisers_s', date, '.csv', sep = '')
fundraisers_file_s_rds <- paste('fundraisers_s', date, '.rds', sep = '')
current_donations_file_s <- file.path(donations_folder, donations_file_s)
current_donations_file_s_rds <- file.path(donations_folder, donations_file_s_rds)
current_fundraisers_file_s <- file.path(fundraisers_folder, fundraisers_file_s)
current_fundraisers_file_s_rds <- file.path(fundraisers_folder, fundraisers_file_s_rds)
all_experimental_pages <- file.path(data_folder, 'experimental_pages.csv')
table_of_data_pulls <- file.path(data_folder, 'data_pulls.csv')
treatments_file <- file.path(data_folder, 'treatments.csv')
current_experimental_donation_state_path <- file.path(data_folder, 'donations_to_experimental_pages.csv')
#This sources the file you just created with your app id on JustGiving
source("my_app_id.R")
#This contains various functions that the other scripts need to call
source("R/functions.R")
#Get table of target charities
charity_data_s <- charities_csv_sample %>%
read_csv %>%
#drop_na(charity_name, regno)
drop_na(charity_name)
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_s <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
fundraiser_search_data_s
#Get table of target charities
charity_data_s <- file.path(data_folder, 'charity_sample_2only.csv') %>%
read_csv %>%
#drop_na(charity_name, regno)
drop_na(charity_name)
#Get table of target charities
charity_data_s <- file.path(data_folder, 'charity_sample_2only.csv') %>%
read_csv %>%
#drop_na(charity_name, regno)
drop_na(charity_name)
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
fundraiser_search_data_sA
fundraiser_search_data_sA$campaignid
fundraiser_search_data_sA$[1:10,]
fundraiser_search_data_sA[1:10,]
fundraiser_search_data_sA[1:10,] %>% View()
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&campaignid=1"*"', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
fundraiser_search_data_sA
fundraiser_search_data_sA <- ""
fundraiser_search_data_sA
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
fundraiser_search_data_sA
warnings()
fundraiser_search_data_sA %>% View
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=999&campaignid=1"*"', sep = '')
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=999&campaignid=1"*"', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_s <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample) %>%
reduce(bind_rows)
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
get_charity_fundraising_pages_sample_A %>% tabyl(id)
get_charity_fundraising_pages_sample_A %>% head()
get_charity_fundraising_pages_sample_A %>% Head()
get_charity_fundraising_pages_sample_A[1:10,] %>% View()
get_charity_fundraising_pages_sample_A %>% head()
fundraiser_search_data_sA %>% head()
fundraiser_search_data_sA
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=999&campaignid%3D1%2A%0A', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
source('~/githubs/DRfundraising_data_pull/R/functions.R', echo=TRUE)
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=99&campaignid%3D1%2A%0A', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_s <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample) %>%
reduce(bind_rows)
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
fundraiser_search_data_sA[1]
fundraiser_search_data_sA[,1]
fundraiser_search_data_sA[1:2,] %>% View()
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=9999&campaignid=12922834', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=9999&id=12922834', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=9999&id=12922834', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=99&id=12922834', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Trying subsetting sample --- Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
#Trying to sample pages starting with numeral '1'
get_charity_fundraising_pages_sample_A <- function(charity_name, id){
charity_search_name <- gsub(' ', '%20', charity_name)
uri <- paste('/v1/onesearch?q=', charity_search_name, '&i=Fundraiser&limit=99&id=12922834', sep = '')
print(paste('Searching for fundraisers for:', charity_name))
charity_search_response <- get_data_from_api(uri)
if(charity_search_response$Total == 0){
return(NULL)
}
fundraisers_data <- charity_search_response[['GroupedResults']][[1]][['Results']] %>%
map(list_to_tibble) %>%
reduce(bind_rows)%>%
mutate(charity = charity_name,
searched_charity_id = id)  %>%
filter(searched_charity_id==CharityId) #filter out where id's do not match ('justgiving_id')
return(fundraisers_data)
}
#Trying subsetting sample --- Get all fundraisers for target charities (just basic information)
fundraiser_search_data_sA <-
map2(charity_data_s$charity_name, charity_data_s$justgiving_id, get_charity_fundraising_pages_sample_A) %>%
reduce(bind_rows)
fundraiser_search_data_sA
fundraiser_search_data_sA %>% View
#This sources the file you just created with your app id on JustGiving
source("my_app_id.R")
charity_search_name
library(pacman)
p_load(dplyr,magrittr,purrr,tidyverse,tidyr,broom,janitor, here,glue,dataMaid,readr,lubridate,summarytools, httr,jsonlite,rlist,XML)
#Folder holding all the raw data and files that are created for the process
data_folder <- 'data'
#File that lists the target charities with their ids
charities_csv <- file.path(data_folder, 'effective_charities.csv') #replace with your list of preferred charities (this script currently only uses charity name and JustGiving ID)
charities_csv_sample <- file.path(data_folder, 'charity_sample.csv')
#A folder that contains all the fundraising and donation data, a new copy each time the code is run
snapshots_folder <- file.path(data_folder, 'just_giving_data_snapshots')
#In the get_current... file, We don't look at pages with first donation that comes before the
experiment_start_date <- as.Date('2018/04/13') #REMEMBER to reset this!!
date = Sys.Date()
time = Sys.time()
#File and folder paths are defined here; used to save the data at the end of this script
donations_file <- paste('donations', date, '.csv', sep = '')
donations_file_rds <- paste('donations', date, '.rds', sep = '')
fundraisers_file <- paste('fundraisers', date, '.csv', sep = '')
fundraisers_file_rds <- paste('fundraisers', date, '.rds', sep = '')
donations_folder <- file.path(snapshots_folder, 'donations')
fundraisers_folder <- file.path(snapshots_folder, 'fundraisers')
current_donations_file <- file.path(donations_folder, donations_file)
current_donations_file_rds <- file.path(donations_folder, donations_file_rds)
current_fundraisers_file <- file.path(fundraisers_folder, fundraisers_file)
current_fundraisers_file_rds <- file.path(fundraisers_folder, fundraisers_file_rds)
#'_s' for 'sample' ... versions including top-10 non-effective
donations_file_s <- paste('donations_s', date, '.csv', sep = '')
donations_file_s_rds <- paste('donations_s', date, '.rds', sep = '')
fundraisers_file_s <- paste('fundraisers_s', date, '.csv', sep = '')
fundraisers_file_s_rds <- paste('fundraisers_s', date, '.rds', sep = '')
current_donations_file_s <- file.path(donations_folder, donations_file_s)
current_donations_file_s_rds <- file.path(donations_folder, donations_file_s_rds)
current_fundraisers_file_s <- file.path(fundraisers_folder, fundraisers_file_s)
current_fundraisers_file_s_rds <- file.path(fundraisers_folder, fundraisers_file_s_rds)
all_experimental_pages <- file.path(data_folder, 'experimental_pages.csv')
table_of_data_pulls <- file.path(data_folder, 'data_pulls.csv')
treatments_file <- file.path(data_folder, 'treatments.csv')
current_experimental_donation_state_path <- file.path(data_folder, 'donations_to_experimental_pages.csv')
#This sources the file you just created with your app id on JustGiving
source("my_app_id.R")
#This contains various functions that the other scripts need to call
source("R/functions.R")
n <- readline("Do you want Effective charity fundraisers (E) or a Sample of all fundraisers? (E/S)")
if (n=="E") {
#Downloads all current data for the target charities, also saves a snapshot
source("R/just_giving_data_pull.R")
} else {
print{"sourcing effective, and a sample of all charities"}
source("R/just_giving_data_pull_sampler.R") #recoded version of the above, to get fundraisers for all effective charities and a (?sample) of other charities
}
if (n=="E") {
#Downloads all current data for the target charities, also saves a snapshot
source("R/just_giving_data_pull.R")}
if (n=="E") {
#Downloads all current data for the target charities, also saves a snapshot
source("R/just_giving_data_pull.R")
} else {
print{"sourcing effective, and a sample of all charities"}
source("R/just_giving_data_pull_sampler.R") #recoded version of the above, to get fundraisers for all effective charities and a (?sample) of other charities
}
#Performs the randomisation, outputs a file listing all new treatment groups, and saves the current state of experimental pages
source("R/get_current_state_and_randomise.R")
rm(list=ls())
{n <- readline("Do you want Effective charity fundraisers (E) or a Sample of all fundraisers? (E/S)")
if (n=="E") {
#Downloads all current data for the target charities, also saves a snapshot
source("R/just_giving_data_pull.R")
} else {
print{"sourcing effective, and a sample of all charities"}
source("R/just_giving_data_pull_sampler.R") #recoded version of the above, to get fundraisers for all effective charities and a (?sample) of other charities
}}
n <- "E"
library(pacman)
p_load(dplyr,magrittr,purrr,tidyverse,tidyr,broom,janitor, here,glue,dataMaid,readr,lubridate,summarytools, httr,jsonlite,rlist,XML)
#Folder holding all the raw data and files that are created for the process
data_folder <- 'data'
#File that lists the target charities with their ids
charities_csv <- file.path(data_folder, 'effective_charities.csv') #replace with your list of preferred charities (this script currently only uses charity name and JustGiving ID)
charities_csv_sample <- file.path(data_folder, 'charity_sample.csv')
# 1 Apr 2020: I quickly constructed this by adding from the list here: https://yougov.co.uk/ratings/politics/popularity/charities-organisations/all, selecting from the top-10 charities only
#A folder that contains all the fundraising and donation data, a new copy each time the code is run
snapshots_folder <- file.path(data_folder, 'just_giving_data_snapshots')
#In the get_current... file, We don't look at pages with first donation that comes before the
experiment_start_date <- as.Date('2018/04/13') #REMEMBER to reset this!!
date = Sys.Date()
time = Sys.time()
#File and folder paths are defined here; used to save the data at the end of this script
donations_file <- paste('donations', date, '.csv', sep = '')
donations_file_rds <- paste('donations', date, '.rds', sep = '')
fundraisers_file <- paste('fundraisers', date, '.csv', sep = '')
fundraisers_file_rds <- paste('fundraisers', date, '.rds', sep = '')
donations_folder <- file.path(snapshots_folder, 'donations')
fundraisers_folder <- file.path(snapshots_folder, 'fundraisers')
current_donations_file <- file.path(donations_folder, donations_file)
current_donations_file_rds <- file.path(donations_folder, donations_file_rds)
current_fundraisers_file <- file.path(fundraisers_folder, fundraisers_file)
current_fundraisers_file_rds <- file.path(fundraisers_folder, fundraisers_file_rds)
#'_s' for 'sample' ... versions including top-10 non-effective
donations_file_s <- paste('donations_s', date, '.csv', sep = '')
donations_file_s_rds <- paste('donations_s', date, '.rds', sep = '')
fundraisers_file_s <- paste('fundraisers_s', date, '.csv', sep = '')
fundraisers_file_s_rds <- paste('fundraisers_s', date, '.rds', sep = '')
current_donations_file_s <- file.path(donations_folder, donations_file_s)
current_donations_file_s_rds <- file.path(donations_folder, donations_file_s_rds)
current_fundraisers_file_s <- file.path(fundraisers_folder, fundraisers_file_s)
current_fundraisers_file_s_rds <- file.path(fundraisers_folder, fundraisers_file_s_rds)
all_experimental_pages <- file.path(data_folder, 'experimental_pages.csv')
table_of_data_pulls <- file.path(data_folder, 'data_pulls.csv')
treatments_file <- file.path(data_folder, 'treatments.csv')
current_experimental_donation_state_path <- file.path(data_folder, 'donations_to_experimental_pages.csv')
#This sources the file you just created with your app id on JustGiving
source("my_app_id.R")
#This contains various functions that the other scripts need to call
source("R/functions.R")
#n <- readline("Do you want Effective charity fundraisers (E) or a Sample of all fundraisers? (E/S)")
if (n=="E") {
#Downloads all current data for the target charities, also saves a snapshot
source("R/just_giving_data_pull.R")
} else {
print{"sourcing effective, and a sample of all charities"}
source("R/just_giving_data_pull_sampler.R") #recoded version of the above, to get fundraisers for all effective charities and a (?sample) of other charities
}
#Performs the randomisation, outputs a file listing all new treatment groups, and saves the current state of experimental pages
source("R/get_current_state_and_randomise.R")
